version: '3.8'

services:
  # SQL Server Database
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: quanly-sqlserver
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "YourStrong@Passw0rd123"
      MSSQL_PID: "Express"
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
      - ./Database/sourceCode.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
      - ./init-database.sql:/docker-entrypoint-initdb.d/02-data.sql:ro
      - ./Database/sourceCode.sql:/docker-entrypoint-initdb.d/sourceCode.sql:ro
      - ./init-database.sh:/docker-entrypoint-initdb.d/init-database.sh:ro
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P 'YourStrong@Passw0rd123' -C -Q 'SELECT 1' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    restart: unless-stopped

  # Backend Node.js/Express
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: quanly-backend
    environment:
      DB_SERVER: sqlserver
      DB_PORT: 1433
      DB_DATABASE: QuanLyKho_JSON
      DB_USER: sa
      DB_PASSWORD: "YourStrong@Passw0rd123"
      DB_ENCRYPT: "true"
      DB_TRUST_CERTIFICATE: "true"
      NODE_ENV: production
    ports:
      - "3001:3001"
    depends_on:
      sqlserver:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/healthz"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  # Frontend Vue.js + Nginx
  frontend:
    build:
      context: ./warehouse-management
      dockerfile: Dockerfile
      args:
        VITE_API_BASE_URL: "/api"
    container_name: quanly-frontend
    ports:
      - "8080:80"
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped

volumes:
  sqlserver_data:
    driver: local